<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="ZipFolder" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <FolderToCompress ParameterType="System.String" Required="true" />
      <OutputFileName ParameterType="System.String" Required="true" />
      <OverwriteExistingFile ParameterType="System.Boolean" Required="false" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.IO.Compression" />
      <Using Namespace="System.IO.Compression" />
      <Code Type="Fragment" Language="cs"><![CDATA[        
            const int BufferSize = 64 * 1024;

            var buffer = new byte[BufferSize];
            var fileMode = OverwriteExistingFile ? FileMode.Create : FileMode.CreateNew;

            Action<string, ZipArchive> addPathToZip = null;
            addPathToZip = new Action<string, ZipArchive>((string path, ZipArchive zip) =>
            {
                 if ((File.GetAttributes(path) & FileAttributes.Directory) == FileAttributes.Directory)
                 {
                     foreach (string p in Directory.GetFileSystemEntries(path))
                     {
                         addPathToZip(p, zip);
                     }
                 }
                 else // It's not a directory
                 {
                     var archivePath = path.Substring(FolderToCompress.TrimEnd('\\', '/').Count() + 1);
                     var archiveEntry = zip.CreateEntry(archivePath);
                     using (var fs = new FileStream(path, FileMode.Open))
                     using (var zipStream = archiveEntry.Open())
                     {
                         int bytesRead = -1;
                         while ((bytesRead = fs.Read(buffer, 0, BufferSize)) > 0)
                         {
                             zipStream.Write(buffer, 0, bytesRead);
                         }
                     }
                 };
             });

            using (var outputFileStream = new FileStream(OutputFileName, fileMode))
            using (var archive = new ZipArchive(outputFileStream, ZipArchiveMode.Create))
            {
                addPathToZip(FolderToCompress, archive);
            }    
      ]]></Code>
    </Task>
  </UsingTask>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{79FF6EAB-3A9D-4572-A27D-D995780160DE}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>o365ToSplunkDataImport</RootNamespace>
    <AssemblyName>o365ToSplunkDataImport</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup>
    <AppSkeletonPath>$(OutputPath)\app\</AppSkeletonPath>
  </PropertyGroup>
  <PropertyGroup>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'DebugNoAttachPoints|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\DebugNoAttachPoints\</OutputPath>
    <DefineConstants>TRACE;DEBUG;DEBUGNOATTACH</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.Office365.ReportingWebServiceClient, Version=1.0.3.35066, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\Microsoft.Office365.ReportingWebServiceClient.1.0.3.0\lib\Microsoft.Office365.ReportingWebServiceClient.dll</HintPath>
    </Reference>
    <Reference Include="Splunk.Client, Version=2.1.1.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\Splunk.Client.2.1.1\lib\portable-net45+win+wpa81\Splunk.Client.dll</HintPath>
    </Reference>
    <Reference Include="Splunk.ModularInputs, Version=2.1.1.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\Splunk.ModularInputs.2.1.1\lib\net45\Splunk.ModularInputs.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Program.cs" />
    <Compile Include="SplunkReportVisitor.cs" />
    <Compile Include="SplunkTraceLogger.cs" />
    <None Include="o365ToSplunkDataImport\default\app.conf" />
    <None Include="o365ToSplunkDataImport\default\data\ui\manager\o365ToSplunkDataImport.xml" />
    <None Include="o365ToSplunkDataImport\README\inputs.conf.spec" />
    <None Include="o365ToSplunkDataImport\README\third party notices.txt" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <None Include="o365ToSplunkDataImport\metadata\default.meta" />
  </ItemGroup>
  <ItemGroup>
    <None Include="o365ToSplunkDataImport\README\LICENSE" />
  </ItemGroup>
  <ItemGroup>
    <None Include="o365ToSplunkDataImport\README\README" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="o365ToSplunkDataImport\appserver\static\appIcon.png" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target> -->
  <Target Name="AfterBuild" Condition=" '$(Configuration)' != 'Release' ">
    <!-- At this point, we have a directory AppSkeleton in the project directory that
         contains app.conf and inputs.conf.spec. -->
    <ItemGroup>
      <DLLsToInclude Include="$(OutputPath)\*.dll" />
      <AppFilesToInclude Include="$(MSBuildProjectDirectory)\o365ToSplunkDataImport\**\*.*" />
    </ItemGroup>
    <MakeDir Directories="$(SPLUNK_HOME)\etc\apps\o365toSplunkDataImport" />
    <!--$(AppSkeletonPath);$(AppSkeletonPath)\o365ToSplunkDataImport;-->
    <!--<Copy SourceFiles="@(AppFilesToInclude)" DestinationFolder="$(AppSkeletonPath)\o365toSplunkDataImport\%(RecursiveDir)" />-->
    <Copy SourceFiles="@(AppFilesToInclude)" DestinationFolder="$(SPLUNK_HOME)\etc\apps\o365toSplunkDataImport\%(RecursiveDir)" />
    <!--<Copy SourceFiles="$(OutputPath)\o365ToSplunkDataImport.exe" DestinationFolder="$(AppSkeletonPath)\o365ToSplunkDataImport\bin" />-->
    <Copy SourceFiles="$(OutputPath)\o365ToSplunkDataImport.exe" DestinationFolder="$(SPLUNK_HOME)\etc\apps\o365ToSplunkDataImport\bin" />
    <!--<Copy SourceFiles="@(DLLsToInclude)" DestinationFolder="$(AppSkeletonPath)\o365ToSplunkDataImport\bin" />-->
    <Copy SourceFiles="@(DLLsToInclude)" DestinationFolder="$(SPLUNK_HOME)\etc\apps\o365ToSplunkDataImport\bin" />
  </Target>
  <Target Name="AfterBuild" Condition=" '$(Configuration)' == 'Release' ">
    <ItemGroup>
      <DLLsToInclude Include="$(OutputPath)\*.dll" />
      <AppFilesToInclude Include="$(MSBuildProjectDirectory)\o365ToSplunkDataImport\**\*.*" />
    </ItemGroup>
    <MakeDir Directories="$(AppSkeletonPath);$(AppSkeletonPath)\o365ToSplunkDataImport" />
    <Copy SourceFiles="@(AppFilesToInclude)" DestinationFolder="$(AppSkeletonPath)\o365toSplunkDataImport\%(RecursiveDir)" />
    <Copy SourceFiles="$(OutputPath)\o365ToSplunkDataImport.exe" DestinationFolder="$(AppSkeletonPath)\o365ToSplunkDataImport\bin" />
    <Copy SourceFiles="@(DLLsToInclude)" DestinationFolder="$(AppSkeletonPath)\o365ToSplunkDataImport\bin" />
    <ZipFolder FolderToCompress="$(AppSkeletonPath)" OutputFileName="$(OutputPath)\o365ToSplunkDataImport.spl" OverwriteExistingFile="true" />
    <Message Importance="high" Text="Finished building .spl file in $(OutputPath)o365ToSplunkDataImport.spl" />
  </Target>
</Project>